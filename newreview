#!/usr/bin/python3

import sys
from datetime import datetime, timedelta, timezone
import requests
import re

def main(args):
    if len(args) < 2:
        print('usage: newreview <title> <doi> <categories>')
        print('title should be quoted')
        print('categories should be quoted and separated by commas')
        sys.exit(2)

    title = args[0]
    name = get_name(title)
    doi = args[1]
    cats = args[2]
    cite = ''

    now_ = datetime.now(timezone.utc)
    tz_offset = timezone(timedelta(hours=3)) # NL
    now = now_.astimezone(tz_offset)
    if now.dst() != timedelta(0):
        tz_offset = timezone(timedelta(hours=2)) # NL WITH DST
        now = now_.astimezone(tz_offset)

    short_dt = now.strftime("%Y-%m-%d")
    full_dt = now.strftime("%Y-%m-%d %H:%M:%S %z")        

    url = f"https://doi.org/{doi}"

    headers = {"Accept": "text/x-bibliography; style=apa"}
    response = requests.get(url, headers=headers, allow_redirects=True)

    if response.status_code == 200:
        cite = response.text

    with open('docs/_posts/' + short_dt + '-' + name + '.md', 'w') as f:
        f.write('---\n')
        f.write('layout: review\n')
        f.write('title: "' + title + '"\n')
        f.write('doi: "' + doi + '"\n')
        f.write('cite: "' + cite + '"\n')
        f.write('date: ' + full_dt + '\n')
        f.write('categories: [' + cats + ']\n')
        f.write('---\n\n')

def get_name(text):
    cleaned_text = re.sub(r'\s+', '-', text)

    if len(cleaned_text) > 50:
        return cleaned_text[:50]
    else:
        return cleaned_text

if __name__ == '__main__':
    main(sys.argv[1:])