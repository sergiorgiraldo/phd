#!/usr/bin/python3

import subprocess
import json

command = """
gh api graphql -f query='
  query{
    node(id: "PVT_kwHOABF2LM4AhB76") {
        ... on ProjectV2 {
          items(first: 20) {
            nodes{
              fieldValues(last: 1) {
                nodes{                
                  ... on ProjectV2ItemFieldSingleSelectValue {
                    name
                    field {
                      ... on ProjectV2FieldCommon {
                        name
                      }
                    }
                  }
                }              
              }
              content{              
                ... on DraftIssue {
                  title
                }
                ...on Issue {
                  title
                }
              }
            }
          }
        }
      }
    }'
"""
result = subprocess.run(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

if result.returncode == 0:
    output = result.stdout.decode("utf-8")
    
    json_data = json.loads(output)
    
    statuses = set()
    status_counts = {}
    
    items = (json_data["data"]["node"]["items"]["nodes"])
    for item in items:
        title_ = item["content"]["title"]
        status = item["fieldValues"]["nodes"][-1]["name"]

        statuses.add(status)
        
        status_counts[status] = status_counts.get(status, 0) + 1

    ordered_statuses = list(statuses)
    ordered_statuses.sort()

    badges = ["", "", "", ""]

    for status in ordered_statuses: 
        if status == "Backlog":
            badges[0] = (f"![Static Badge](https://img.shields.io/badge/{status}-{status_counts[status]}-red?style=for-the-badge)")
        if status == "Prioritized":
            badges[1] =(f"![Static Badge](https://img.shields.io/badge/{status}-{status_counts[status]}-blue?style=for-the-badge)")
        if status == "Doing":
            badges[2] = (f"![Static Badge](https://img.shields.io/badge/{status}-{status_counts[status]}-green?style=for-the-badge)")
        if status == "Done":
            badges[3] = (f"![Static Badge](https://img.shields.io/badge/{status}-{status_counts[status]}-cyan?style=for-the-badge)")

    print("\n\n".join(badges))

else:
    error_message = result.stderr.decode("utf-8")
    print(f"Error: {error_message}")